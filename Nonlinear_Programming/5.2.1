Question 5.2.1:

Function: f(x1,x2) = (1/2)*(x1*x1 - x2*x2) - 3*x2

Constraint: x2=0

a) Lagrange Equation: L(x1,x2,lambda) = (1/2)*(x1*x1 - x2*x2) -3x2 + lambda*x2

   By quick glance, x2 is zero. The Augmented Lagrangian has issues because non-zero equalities. So, (x1*, x2*, lambda*) = (0, 0, 0).

b) The iterations, k= 0, 1, and 2 for c^k=10^{k+1} 

   Quadratic Penalty Method:

     Augmented Lagrangian: L(x1,x2,c) = f(x) + c/2*x2*x2

                                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c/2*x2*x2

     k=0:  L(x1,x2,c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{k+1}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{1}/2*x2*x2
 
                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 10^{1}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 5*x2*x2

           dL(x1,x2)/dx1 = x1

	   = 0

           dL(x1,x2)/dx2 = -x2-3+10*x2

                         = 0
 
               (x1*,x2*) = (0, 3/9)
 
     k=1:  L(x1,x2,c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{k+1}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{2}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 10^{2}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 50*x2*x2

           dL(x1,x2)/dx1 = x1

                         = 0

           dL(x1,x2)/dx2 = -x2-3+100*x2

                         = 0

               (x1*,x2*) = (0, 3/99)

     k=2:  L(x1,x2,c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{k+1}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + c^{3}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 10^{3}/2*x2*x2

                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + 500*x2*x2

           dL(x1,x2)/dx1 = x1

                         = 0

           dL(x1,x2)/dx2 = -x2-3+1000*x2

                         = 0

               (x1*,x2*) = (0, 3/999)

   Method of Multipliers:
                                  
     Augmented Lagrangian: L(x1,x2,lambda) = f(x) + lambda*x2*x2

                                      = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda{k+1}*x2

                                         where lambda^{k+1} = lambda^k + c^k*x2, lambda^0 = 0
                              
     k=0:  L(x1,x2,lambda, c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^k*x2 

                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^{0}*x2 

                              = (1/2)*(x1*x1 - x2*x2) - 3*x2

                dL(x1,x2)/dx1 = x1

                              = 0

                dL(x1,x2)/dx2 = x2-3

                              = 0

                    (x1*,x2*) = (0, 3)
                 
     k=1:  L(x1,x2,lambda, c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^k*x2

                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^{1}*x2
                              
                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + (lambda^0+c^{0}*x2)*x2
 
                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + x2 + 10^{0}*x2*x2
                              
                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + x2 + x2*x2

                dL(x1,x2)/dx1 = x1

                              = 0

                dL(x1,x2)/dx2 = x2-2+2x2
               
                    (x1*,x2*) = (0, 2/3)
                
     k=2:  L(x1,x2,lambda, c) = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^k*x2

                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + lambda^{2}*x2
                              
                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + (lambda^1+c^{1}*x2)*x2
 
                              = (1/2)*(x1*x1 - x2*x2) - 3*x2 + (lambda^0+c^{0}*x2)*x2 + 10^{1}*x2*x2
                              
                              = (1/2)*(x1*x1 - x2*x2) - 2*x2 + 11*x2*x2

                dL(x1,x2)/dx1 = x1

                              = 0

                dL(x1,x2)/dx2 = x2-2+11x2

                              = 0

                    (x1*,x2*) = (0, 2/12)
                              
 

Convergene Comparison :
                   
     ________________________________________|Iteration|________________________
     |                              |    0    |          1     |         2      |
     |Quadratic Penalty     (x1,x2) | (0,3/9) |      (0, 3/99) |      (0,3/999) |
     |Method of Multipliers (x1,x2) | (0,3)   |      (0, 2/3)  |      (0,2/12)  |
      
     -Each iteration method for the function f(x1,x2) converges to zero, as with both x1 and x2.
     -The calculation by hand in part (a) are equivalent to iterative techniques in part (b).
     -The Augmented Lagrangian extends from linear to quadratic multipliers; two multipliers; a regulizer coefficient, and more.
     -I used my first real-world Augmented Lagrangian in the separation of Regression vs. Lagrangian applications. They work.
     




         


